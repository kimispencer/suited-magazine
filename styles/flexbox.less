// Flexbox display
// flex or inline-flex
.flexbox(@display: flex) {
	/*border: 1px dashed red;*/
	display: -webkit-box;			 // why does this break flex-direction?
	display: ~"-webkit-@{display}";
	display: ~"-moz-@{display}";
	display: ~"-ms-@{display}box";  // IE10 uses -ms-flexbox
	display: ~"-ms-@{display}";     // IE11
	display: @display;

	/* default center */
	// OLDE FLEXBOX
	.flexbox-align(center);
	.flexbox-pack(center);

	// NEW FLEXBOX
	.justify-content(center);
	.align-items(center);
}
/* 
	* OLDE FLEXBOXE 
	* .flebox-align() aligns flex items on the vertical access
	* .align-items() is the new flexbox syntax
*/
.flexbox-align(@align: center) {
	-webkit-box-align: @align;
	-moz-box-align: @align;
	-ms-flex-align: @align;
	box-align: @align;
}
/* 
	* OLDE FLEXBOXE 
	* .flebox-pack() aligns flex items on the horizontal access
	* .justify-content() is the new flexbox syntax
*/
.flexbox-pack(@align: center) {
	-webkit-box-pack: @align;
	-moz-box-pack: @align;
	-ms-flex-pack: @align;
	box-pack: @align;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
  -webkit-flex: @columns;
     -moz-flex: @columns;
      -ms-flex: @columns;
          flex: @columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
     -moz-flex-direction: @direction;
      -ms-flex-direction: @direction;
          flex-direction: @direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
     -moz-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}

/*// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
     -moz-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}*/

.flex-flow (@flow) when (@flow = column) {
	// YE OLDE FLEXBOXE
	-webkit-box-orient: vertical;
	-webkit-flex-flow: @flow;
	-moz-flex-flow: @flow;
	-ms-flex-flow: @flow;
	flex-flow: @flow;
}
.flex-flow (@flow) when (@flow = row) {
	// YE OLDE FLEXBOXE
	-webkit-box-orient: horizontal;
	-webkit-flex-flow: @flow;
	-moz-flex-flow: @flow;
	-ms-flex-flow: @flow;
	flex-flow: @flow;
}

// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
  -webkit-order: @order;
     -moz-order: @order;
      -ms-order: @order;
          order: @order;
}

// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
  -webkit-flex-grow: @grow;
     -moz-flex-grow: @grow;
      -ms-flex-grow: @grow;
          flex-grow: @grow;
}

// Flex shr
// - applies to: flex itemsink factor
// <number> 
.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
     -moz-flex-shrink: @shrink;
      -ms-flex-shrink: @shrink;
          flex-shrink: @shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
     -moz-flex-basis: @width;
      -ms-flex-basis: @width;
          flex-basis: @width;
}

/* 
	* OLDE FLEXBOXE FALLBACK
	* .justify-content() is the new flexbox syntax
	* .flexbox-pack() aligns flex items on the horizontal access
*/
.justify-content (@justify) when (@justify = flex-start) {
	// YE OLDE FLEXBOXE
	.flexbox-pack(@align: start);
}
.justify-content (@justify) when (@justify = flex-end) {
	// YE OLDE FLEXBOXE
	.flexbox-pack(@align: end);
}
.justify-content (@justify) when (@justify = space-between) {
	// YE OLDE FLEXBOXE
	.flexbox-pack(@align: justify);
}
.justify-content (@justify) when (@justify = center) {
	// YE OLDE FLEXBOXE
	.flexbox-pack(@align: center);
}
// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
.justify-content(@justify: center) {
  -webkit-justify-content: @justify;
     -moz-justify-content: @justify;
      -ms-justify-content: @justify;
          justify-content: @justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
.align-content(@align: center) {
  -webkit-align-content: @align;
     -moz-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}

/* 
	* OLDE FLEXBOXE FALLBACK
	* .align-items() is the new flexbox syntax
	* .flexbox-align() aligns flex items on the horizontal access
*/
.align-items (@align) when (@align = flex-start) {
	// YE OLDE FLEXBOXE
	.flexbox-align(@align: start);
}
.align-items (@align) when (@align = flex-end) {
	// YE OLDE FLEXBOXE
	.flexbox-align(@align: end);
}
.align-items (@align) when (@align = space-between) {
	// YE OLDE FLEXBOXE
	.flexbox-align(@align: justify);
}
.align-items (@align) when (@align = center) {
	// YE OLDE FLEXBOXE
	.flexbox-align(@align: center);
}
// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
.align-items(@align: stretch) {
  -webkit-align-items: @align;
     -moz-align-items: @align;
      -ms-align-items: @align;
          align-items: @align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
.align-self(@align: auto) {
  -webkit-align-self: @align;
     -moz-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
}